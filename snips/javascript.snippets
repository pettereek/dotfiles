#
# Capsule
# -------
#
snippet cfetch "capsule Fetch component" b
Components.Fetch('${1:ComponentName}', {
	statics: {
		query(${2:params}) {
			return { ${3} }
		}
	},

	render() {
		return null
	}
})
endsnippet

snippet cdispact "capsule Utils bind dispatch actions" b
dispatch => Utils.BindDispatchActions(dispatch, {
	actions: ${1:Model}.actions
})
endsnippet

#
# Testing
# -------
#
snippet testdesc "describe(..., () => {})" b
describe('$1', () => {
	$2
})$0
endsnippet

snippet testit "it(..., () => {})" b
it('$1', () => {
	$2
})$0
endsnippet

snippet sheq "should.eql" b
should.eql($1)$0
endsnippet

#
# JSX
# ---
#
snippet strong "<strong>" w
<strong>${1:${VISUAL}}</strong>$0
endsnippet

snippet ul "<ul>...</ul>" w
<ul>
	<li>${1:${VISUAL}}</li>
</ul>$0
endsnippet

#
# React
# -----
#
snippet gis "react getInitialState" b
getInitialState() {
	return {
		$0
	}
},
endsnippet

snippet gdp "react getDefaultProps" b
getDefaultProps() {
	return {
		$0
	}
},
endsnippet

snippet proptypes "react PropTypes" b
propTypes: {
	$0
},
endsnippet

snippet proptype "react PropType" b
${1:name}: React.PropTypes.$2${3:.isRequired}
endsnippet

snippet createclass "react createClass" b
const ${1:ClassName} = React.createClass({
	displayName: '$1',

	render() {
		return <${2:div}>$0</$2>
	}
})
endsnippet

snippet component "react stateless component" b
function ${1:ComponentName}(${2:props}) {
	return <${3:div}>$0</$3>
}
$1.displayName = '$1'
endsnippet

snippet toggle "react toggle state" b
toggle${1:Thing}() {
	this.setState({ ${2:thing}: !this.state.$2 })
},
endsnippet

snippet connect "react connect component" b
connect(
	${1:null},
	${2:null}
)(${0:${VISUAL:React.createClass(\{
\})}})
endsnippet

snippet ismounted "react is mounted check" b
if (this.isMounted()) {
	${0:${VISUAL}}
}
endsnippet

#
# Imports
# -------
#
snippet imp "import abc from 'abc'" b
import $1 from '$2'
endsnippet

snippet impca "import {x} from '@syb/capsule'" b
import {$1} from '@syb/capsule'
endsnippet

snippet impui "import {x} from '@syb/ui'" b
import {$1} from '@syb/ui'
endsnippet

snippet impr "import React from 'react'" b
import React from 'react'$0
endsnippet

snippet impim "import im from 'immutable'" b
import im from 'immutable'$0
endsnippet

#
# General
# -------
#
snippet reduce "reduce function" b
${1:list}.reduce((${3:acc}, ${4:item}) => {
	return $3
}, ${2:initial})
endsnippet

snippet map "map function" b
${1:list}.map(${2:item} => {
	return $2
})
endsnippet

snippet fff "() => {}" w
($1) => {$0}
endsnippet

snippet imget "immutable get" w
get('${1:${VISUAL}}')$0
endsnippet

snippet imgetin "immutable getIn" w
getIn(['`!p snip.rv = snip.v.text.replace(".", "', '")`'])$0
endsnippet

#
# Browser
# -------
#
snippet cdebug "console.debug" b
console.debug('$0')
endsnippet

snippet clog "console.log" b
console.log('$0')
endsnippet

snippet cinfo "console.info" b
console.info('$0')
endsnippet

snippet cwarn "console.warn" b
console.warn('$0')
endsnippet

snippet cerror "console.error" b
console.error('$0')
endsnippet
